var FormValidation = function () {	$.validator.addMethod("beginwith569",	    function(value, element) {	        return /^5[0-9].*$/.test(value) || /^6[0-9].*$/.test(value)|| /^9[0-9].*$/.test(value);	}, "Mobile number should begin with 5, 6, 9");	$.validator.addMethod("charonly",	    function(value, element) {	        return /^[A-Za-z ]+$/.test(value);	}, "Please input character only");	$.validator.addMethod("isHKID",	    function(value, element) {	    	var str = value;	        var strValidChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"		    // basic check length		    if (str.length < 8)		        return false;		  		    // handling bracket		    if (str.charAt(str.length-3) == '(' && str.charAt(str.length-1) == ')')		        str = str.substring(0, str.length - 3) + str.charAt(str.length -2);		    // convert to upper case		    str = str.toUpperCase();		    // regular expression to check pattern and split		    var hkidPat = /^([A-Z]{1,2})([0-9]{6})([A0-9])$/;		    var matchArray = str.match(hkidPat);		    // not match, return false		    if (matchArray == null)		        return false;		    // the character part, numeric part and check digit part		    var charPart = matchArray[1];		    var numPart = matchArray[2];		    var checkDigit = matchArray[3];		    // calculate the checksum for character part		    var checkSum = 0;		    if (charPart.length == 2) {		        checkSum += 9 * (10 + strValidChars.indexOf(charPart.charAt(0)));		        checkSum += 8 * (10 + strValidChars.indexOf(charPart.charAt(1)));		    } else {		        checkSum += 9 * 36;		        checkSum += 8 * (10 + strValidChars.indexOf(charPart));		    }		    // calculate the checksum for numeric part		    for (var i = 0, j = 7; i < numPart.length; i++, j--)		        checkSum += j * numPart.charAt(i);		    // verify the check digit		    var remaining = checkSum % 11;		    var verify = remaining == 0 ? 0 : 11 - remaining;		    return verify == checkDigit || (verify == 10 && checkDigit == 'A');	}, "Please input a valid HKID");	$.validator.addMethod("isAdult",	    function(value, element) {	    	var dateString = value;	        var today = new Date();		    var birthDate = new Date(dateString);		    var age = today.getFullYear() - birthDate.getFullYear();		    var m = today.getMonth() - birthDate.getMonth();		    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {		        age--;		    }		    		    if (age < 18) {		    	return false;		    } else {		    	return true;		    }	}, "Your age should be elder than 18");    // validation using icons    var handleValidation2 = function() {        // for more info visit the official plugin documentation:             // http://docs.jquery.com/Plugins/Validation            var form2 = $('#AppForm');            var error2 = $('.alert-danger', form2);            var success2 = $('.alert-success', form2);		                form2.validate({                errorElement: 'span', //default input error message container                errorClass: 'help-block help-block-error', // default input error message class                focusInvalid: false, // do not focus the last invalid input                ignore: "",  // validate all fields including form hidden input                rules: {                    "Surname": {                    	charonly: true,                    },		            "Given Name": {		            	charonly: true,                    },	                "HKID": {	                	isHKID: true,                    },	                "HKID or Passport No.": {	                	isHKID: true,                    },                    "Mobile": {                    	minlength: 8,                    	maxlength: 8,	                    integer: true,	                    min: 0,                    	beginwith569: true,                    },                    "Overall GPA": {                    	number: true,                    	min: 0,                    	max: 4.5,                    },                    "Office Tel": {                    	integer: true,                    	min: 0,	                },	                "Home Phone No.": {                    	integer: true,                    	min: 0,	                },		            "Date of Birth": {	                	isAdult: true,                    },                },                messages: {                	"Mobile": {                		integer: "Please input number only",                	},            		"Home Phone No.": {            			integer: "Please input number only",                	},                	"Office Tel": {            			integer: "Please input number only",                	},                },                invalidHandler: function (event, validator) { //display error alert on form submit                                  //success2.hide();                    error2.show();                    App.scrollTo(error2, -200);                },                errorPlacement: function (error, element) { // render error placement for each input type                    var icon = $(element).parent('.input-icon').children('i');                    icon.removeClass('fa-check').addClass("fa-warning");                      icon.attr("data-original-title", error.text()).tooltip({'container': 'body'});                },                highlight: function (element) { // hightlight error inputs                    $(element)                        //.closest('.form-group').removeClass("has-success").addClass('has-error'); // set error class to the control group                   		.closest('.form-group').addClass('has-error');	                },                unhighlight: function (element) { // revert the change done by hightlight                                    },                success: function (label, element) {                    var icon = $(element).parent('.input-icon').children('i');                    //$(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group                    $(element).closest('.form-group').removeClass('has-error');                    //icon.removeClass("fa-warning").addClass("fa-check");                    icon.removeClass("fa-warning");                },                submitHandler: function (form) {                    //success2.show();                    error2.hide();                    form[0].submit(); // submit the form                }            });                            }        var handleWysihtml5 = function() {        if (!jQuery().wysihtml5) {                        return;        }        if ($('.wysihtml5').size() > 0) {            $('.wysihtml5').wysihtml5({                "stylesheets": ["../assets/global/plugins/bootstrap-wysihtml5/wysiwyg-color.css"]            });        }    }    return {        //main function to initiate the module        init: function () {            handleWysihtml5();            handleValidation2();        }    };}();jQuery(document).ready(function() {    FormValidation.init();});